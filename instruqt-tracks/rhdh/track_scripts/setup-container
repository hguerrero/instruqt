#!/bin/bash

export OPENSHIFT_RELEASE_VERSION="4.14.7"

dnf install -y procps-ng iputils bind-utils git java-11-openjdk-devel.x86_64 maven openssl jq

crc=`nslookup crc |  awk -F': ' 'NR==6 { print $2 } '`
echo "$crc crc api.crc.testing oauth-openshift.apps-crc.testing" >> /etc/hosts

curl -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/$OPENSHIFT_RELEASE_VERSION/openshift-client-linux-$OPENSHIFT_RELEASE_VERSION.tar.gz -o /tmp/openshift-client-linux-$OPENSHIFT_RELEASE_VERSION.tar.gz
tar -xvf /tmp/openshift-client-linux-$OPENSHIFT_RELEASE_VERSION.tar.gz -C /usr/bin/
chmod +x /usr/bin/oc
chmod +x /usr/bin/kubectl

# Install ansible playbook dependencies:
dnf install -y ansible helm
python3 -m ensurepip --upgrade
python3 -m pip install --upgrade pip
ansible-galaxy collection install kubernetes.core community.hashi_vault
helm plugin install https://github.com/databus23/helm-diff
pip3 install --user kubernetes openshift hvac PyYAML

git clone -b development https://github.com/redhat-cop/agnosticd

#echo "sleep for 5 mins"
#sleep 300
#
#until oc login api.crc.testing:6443 --insecure-skip-tls-verify=true -u admin -p admin 2>/dev/null 1>&2; do
#  echo "Waiting for oc login to succeed..";
#  sleep 30;
#done
#
#until [[ `oc get routes -A | awk '!/^(NAME|openshift-ingress-canary)/{print$3}' |grep instruqt` ]]; do
#    echo "Routes not patched yet, waiting 30 seconds..";
#    sleep 30;
#done
#
## do twice since cluster operator rolls out continuously
#for co in $(oc get co -oname)
#do
#    # skip this one
#    if [ $co == "clusteroperator.config.openshift.io/machine-config" -o $co == "clusteroperator.config.openshift.io/openshift-controller-manager" ]
#    then
#      continue
#    fi
#
#    echo -n "Waiting for $co ..."
#    co_available=$(oc get $co 2>/dev/null | awk -v col=AVAILABLE 'NR==1{for(i=1;i<=NF;i++){if($i==col){c=i;break}} print $c} NR>1{print $c}' | grep True)
#
#    while [ "${co_available}" == "" ]
#    do
#      sleep 5
#      echo -n "."
#      co_available=$(oc get $co 2>/dev/null | awk -v col=AVAILABLE 'NR==1{for(i=1;i<=NF;i++){if($i==col){c=i;break}} print $c} NR>1{print $c}' | grep True)
#    done
#    echo "AVAILABLE"
#
#    co_progressing=$(oc get $co 2>/dev/null | awk -v col=PROGRESSING 'NR==1{for(i=1;i<=NF;i++){if($i==col){c=i;break}} print $c} NR>1{print $c}' | grep False)
#
#    while [ "${co_progressing}" == "" ]
#    do
#      echo "Cluster Operator $co still progressing"
#      sleep 5
#      echo -n "."
#      co_progressing=$(oc get $co 2>/dev/null | awk -v col=PROGRESSING 'NR==1{for(i=1;i<=NF;i++){if($i==col){c=i;break}} print $c} NR>1{print $c}' | grep False)
#    done
#done
#
## Wait until web console is available
#while [ "$(oc rollout status deploy console -n openshift-console)" != "deployment \"console\" successfully rolled out" ]
#do
#    echo "Waiting for web console - rollout incomplete"
#    sleep 5
#done
#
#while [ "$(oc rollout status deploy apiserver -n openshift-oauth-apiserver)" != "deployment \"apiserver\" successfully rolled out" ]
#do
#    echo "Waiting for oauth API - rollout incomplete"
#    sleep 5
#done
#
echo "Container - Ready for RHDH Setup!"
